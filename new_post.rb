# encoding: UTF-8

# Подключаем класс Post и его детей
require_relative 'post.rb'
require_relative 'memo.rb'
require_relative 'link.rb'
require_relative 'task.rb'
require_relative 'tweet.rb'

# Как обычно, при использовании классов программа выглядит очень лаконично
puts "Привет, я блокнот версия 2, записываю новые записи в базу SQLite :)"

# Теперь надо спросить у пользователя, что он хочет создать
puts "Что хотите записать в блокнот?"

# массив возможных видов Записи (поста)
choices = Post.post_types.keys # сохраним в переменной все виды постов воспользовавшись статическим методом класса
# добавили метод keys, т.к. теперь виды постов записаны в хэше
choice = -1 # здесь будем хранить выбор пользователя. Пока в него зададим условие не выхода из цикла

until choice >= 0 && choice < choices.size # пока юзер не выбрал правильно
  # выводим заново массив возможных типов поста
  choices.each_with_index do |type, index| # динамически будем выводить. Метод each_with_index организует
  	# цикл по всем элементам массива choices. type - это элемент массива. index - его номер 
    puts "\t#{index}. #{type}"
  end
  choice = gets.chomp.to_i # мы считываем номер index, который ввел пользователь
  # переводим его в цифру, потому что условие цикла until проверяет цифры
end

# выбор сделан, создаем запись с помощью стат. метода класса Post. Добавили индекс у массива
entry = Post.create(choices[choice])

# сейчас в переменной entry лежит один из детей класса Post, какой именно,
# определилось выбором пользователя, переменной choice.
# Но мы не знаем какой, и обращаемся с entry как с объектом класса Post, этого, оказывается,
# достаточно.

# Просим пользователя ввести пост (каким бы он ни был)
entry.read_from_console

# Сохраняем пост в БД и получаем идентификатор
rowid = entry.save_to_db

puts "Ваша запись сохранена в базе, id = #{rowid}"